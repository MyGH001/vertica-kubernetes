# (c) Copyright [2021] Micro Focus or one of its affiliates.
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vertica.fullname" . }}
  labels:
    {{ include "vertica.common-labels" . | nindent 4 }}
    {{ include "vertica.server-labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
{{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      {{ include "vertica.common-labels" . | nindent 6 }}
      {{ include "vertica.server-labels" . | nindent 6 }}
      {{- with .Values.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  serviceName: {{ include "vertica.headless-svc-name" . }}
  replicas: {{ .Values.subclusters.defaultsubcluster.replicaCount }}
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        {{ include "vertica.common-labels" . | nindent 8 }}
        {{ include "vertica.server-labels" . | nindent 8 }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- if .Values.annotations }}
      annotations:
        {{- toYaml .Values.annotations | nindent 8 }}
{{- end }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      initContainers:
        - image: {{ .Values.image.server.name }}:{{ .Values.image.server.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: configinit
          command: ['/opt/vertica/bin/docker-entrypoint.sh', 're-ip-vertica-node']
          volumeMounts:
            - name: local-data
              subPath: config
              mountPath: /opt/vertica/config
            - name: local-data
              mountPath: {{ .Values.db.storage.local.path }}
            - name: local-data
              subPath: log
              mountPath: /opt/vertica/log
            - name: podinfo
              mountPath: /etc/podinfo
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      containers:
        - image: {{ .Values.image.server.name }}:{{ .Values.image.server.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: server
          volumeMounts:
            - name: local-data
              mountPath: {{ .Values.db.storage.local.path }}
            - name: local-data
              subPath: config
              mountPath: /opt/vertica/config
            - name: local-data
              subPath: log
              mountPath: /opt/vertica/log
            - name: podinfo
              mountPath: /etc/podinfo
            {{- if .Values.db.licenseSecret }}
            - name: licensing
              mountPath: /home/dbadmin/licensing/mnt
            {{- end }}
          {{- if .Values.subclusters.defaultsubcluster.resources }}
          resources:
          {{- toYaml .Values.subclusters.defaultsubcluster.resources | nindent 13 }}
          {{- end }}
          ports:
            - containerPort: 5433
              name: vertica
            - containerPort: 5434
              name: vertica-int
            - containerPort: 22
              name: ssh
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command: ['/opt/vertica/bin/docker-entrypoint.sh', 'restart-vertica-node']
      {{- with .Values.subclusters.defaultsubcluster }}
      {{- if .nodeSelector }}
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .affinity }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      {{- end }}
      {{- if .priorityClassName }}
      priorityClassName: {{ .priorityClassName }}
      {{- end }}
      {{- if .tolerations }}
      tolerations:
        {{- toYaml .tolerations | nindent 8 }}
      {{- end }}
      {{- end }}
      volumes:
        - name: podinfo
          projected:
            sources:
              - downwardAPI:
                  items:
                    - path: "memory-limit"
                      resourceFieldRef:
                        resource: limits.memory
                        containerName: server
                    - path: "memory-request"
                      resourceFieldRef:
                        resource: requests.memory
                        containerName: server
                    - path: "cpu-limit"
                      resourceFieldRef:
                        resource: limits.cpu
                        containerName: server
                    - path: "cpu-request"
                      resourceFieldRef:
                        resource: requests.cpu
                        containerName: server
                    - path: "labels"
                      fieldRef:
                        fieldPath: metadata.labels
                    - path: "name"
                      fieldRef:
                        fieldPath: metadata.name
              - configMap:
                  name: {{ include "vertica.configmap-name" . }}
              {{- if .Values.db.superuserPasswordSecret }}
              - secret:
                  name: {{ .Values.db.superuserPasswordSecret.name }}
                  items:
                    - key: {{ .Values.db.superuserPasswordSecret.key }}
                      path: superuser-passwd
              {{- end }}
        {{- if .Values.db.licenseSecret }}
        - name: licensing
          secret:
            secretName: {{ .Values.db.licenseSecret.name }}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: local-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.db.storage.local.size }}
        {{- if .Values.db.storage.local.storageClass }}
        storageClassName: {{ .Values.db.storage.local.storageClass }}
        {{- end}}
